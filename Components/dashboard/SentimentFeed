import React, { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Flag, Mail, MessageSquare, Share2, User } from "lucide-react";
import { motion, AnimatePresence } from "framer-motion";
import { format } from "date-fns";

const sentimentEmoji = {
  positive: "üòä",
  neutral: "üòê",
  negative: "üò†"
};

const sentimentColor = {
  positive: "bg-[#28A745]",
  neutral: "bg-[#FD7E14]",
  negative: "bg-[#DC3545]"
};

const sourceIcon = {
  email: Mail,
  social: Share2,
  survey: MessageSquare,
  chat: MessageSquare
};

export default function SentimentFeed({ alerts, onFlag }) {
  const [expandedId, setExpandedId] = useState(null);

  return (
    <Card className="bg-[#242942] border-[#2d3250] p-6">
      <h3 className="text-xl font-bold text-white mb-4">Real-time Sentiment Feed</h3>
      <div className="space-y-3 max-h-[600px] overflow-y-auto pr-2">
        <AnimatePresence>
          {alerts.map((alert, index) => {
            const SourceIcon = sourceIcon[alert.source];
            const isExpanded = expandedId === alert.id;
            const message = isExpanded ? alert.message : 
              alert.message.length > 100 ? alert.message.substring(0, 100) + '...' : alert.message;
            
            return (
              <motion.div
                key={alert.id}
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: 20 }}
                transition={{ delay: index * 0.05 }}
              >
                <Card 
                  className="bg-[#1a1d2e] border-[#2d3250] p-4 hover:border-[#007BFF] transition-all cursor-pointer"
                  onClick={() => setExpandedId(isExpanded ? null : alert.id)}
                >
                  <div className="flex items-start gap-3">
                    <div className="w-10 h-10 rounded-full bg-[#007BFF] flex items-center justify-center flex-shrink-0">
                      <span className="text-white font-semibold">
                        {alert.customer_name.charAt(0).toUpperCase()}
                      </span>
                    </div>
                    
                    <div className="flex-1 min-w-0">
                      <div className="flex items-center justify-between mb-1">
                        <div className="flex items-center gap-2">
                          <h4 className="font-semibold text-white">{alert.customer_name}</h4>
                          <SourceIcon className="w-3 h-3 text-gray-400" />
                        </div>
                        <span className="text-2xl">{sentimentEmoji[alert.sentiment_type]}</span>
                      </div>
                      
                      <p className="text-sm text-gray-400 mb-1">{alert.customer_email}</p>
                      
                      <p className="text-sm text-gray-300 mb-2">{message}</p>
                      
                      <div className="flex items-center justify-between">
                        <div className="flex items-center gap-2">
                          <Badge className={`${sentimentColor[alert.sentiment_type]} text-white border-0`}>
                            {alert.sentiment_type}
                          </Badge>
                          <span className="text-xs text-gray-500">
                            {format(new Date(alert.created_date), "MMM d, h:mm a")}
                          </span>
                        </div>
                        
                        <Button
                          variant="ghost"
                          size="sm"
                          onClick={(e) => {
                            e.stopPropagation();
                            onFlag(alert.id);
                          }}
                          className={`${alert.is_flagged ? 'text-[#FD7E14]' : 'text-gray-400'} hover:text-[#FD7E14]`}
                        >
                          <Flag className="w-4 h-4" />
                        </Button>
                      </div>
                    </div>
                  </div>
                </Card>
              </motion.div>
            );
          })}
        </AnimatePresence>
      </div>
    </Card>
  );
}
